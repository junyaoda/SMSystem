{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    return {\n      users: [],\n      headers: [{\n        text: 'No',\n        value: 'id',\n        align: 'center'\n      }, {\n        text: 'ユーザ名',\n        value: 'userName',\n        align: 'center'\n      }, {\n        text: 'SlackID',\n        value: 'slackId',\n        align: 'center'\n      }, {\n        text: '操作',\n        value: 'delete',\n        align: 'center',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    deleteItem(item) {\n      confirm(item);\n      const url = 'http://localhost:8080/user/userDelete';\n      axios.delete(url, {\n        params: {\n          id: 1\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push('/SubmissionManagement');\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    updateItem() {\n      // const index = this.items.indexOf(item)\n      // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n      const url = 'http://localhost:8080/user/userUpdate';\n      axios.post(url, {\n        id: 1,\n        slackId: 'aaa',\n        userName: 'aaa'\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push('/SubmissionManagement');\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    getUser() {\n      const path = 'http://localhost:8080/user';\n      axios.get(path).then(response => {\n        this.users = response.data;\n        this.parsed = JSON.parse(this.users);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.getUser();\n  }\n};","map":{"version":3,"names":["axios","components","data","users","headers","text","value","align","sortable","methods","deleteItem","item","confirm","url","delete","params","id","then","response","console","log","$router","push","catch","err","updateItem","post","slackId","userName","getUser","path","get","parsed","JSON","parse","error","created"],"sources":["src/pages/MemberManagement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main>\n            <v-container>\n                <h2>\n                    <space></space>メンバー管理\n                </h2>\n                <v-row>\n                    <v-col cols=\"10\">\n                        <tr v-for=\"(user, key) in users\" :key=\"key\">\n                            <td>{{ user.id }}</td>\n                            <td>{{ user.slackId }}</td>\n                            <td>{{ user.userName }}</td>\n                            <td>{{ key }}</td>\n                            <td>\n                                <v-btn @click=\"deleteItem(users)\">\n                                    delete\n                                </v-btn>\n                                <v-btn @click=\"updateItem()\">\n                                    update\n                                </v-btn>\n                            </td>\n                        </tr>\n                    </v-col>\n                </v-row>\n                <!-- <v-row>\n                    <v-col cols=\"10\">\n                        <v-data-table :headers=\"headers\" :items=\"users\">\n\n                            <template v-slot:[`item.delete`]=\"{}\">\n                                <v-btn @click=\"deleteItem(users)\">\n                                    delete\n                                </v-btn>\n                                <v-btn @click=\"updateItem()\">\n                                    update\n                                </v-btn>\n                            </template>\n                        </v-data-table>\n                    </v-col>\n                </v-row> -->\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            users: [],\n            headers: [\n                {\n                    text: 'No',\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: 'ユーザ名',\n                    value: 'userName',\n                    align: 'center',\n                },\n                {\n                    text: 'SlackID',\n                    value: 'slackId',\n                    align: 'center',\n                },\n                {\n                    text: '操作',\n                    value: 'delete',\n                    align: 'center',\n                    sortable: false,\n                },\n            ],\n        }\n    },\n    methods: {\n        deleteItem(item) {\n            confirm(item);\n            const url = 'http://localhost:8080/user/userDelete'\n            axios.delete(url,{\n                params: {\n                    id:1\n                }\n            }\n                )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.push('/SubmissionManagement')\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        updateItem() {\n            // const index = this.items.indexOf(item)\n            // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n            const url = 'http://localhost:8080/user/userUpdate'\n            axios.post(url, {\n                id:1,\n                slackId:'aaa',\n                userName: 'aaa',\n            }\n            )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.push('/SubmissionManagement')\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        getUser() {\n            const path = 'http://localhost:8080/user'\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n\n                    this.parsed = JSON.parse(this.users);\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    },\n    created() {\n        this.getUser()\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AA8CA,OAAAA,KAAA;AACA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA;MACAC,OAAA,CAAAD,IAAA;MACA,MAAAE,GAAA;MACAb,KAAA,CAAAc,MAAA,CAAAD,GAAA;QACAE,MAAA;UACAC,EAAA;QACA;MACA,CACA,EACAC,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAhB,IAAA;QACA,KAAAmB,OAAA,CAAAC,IAAA;MACA,GAEAC,KAAA,CAAAC,GAAA;QACAL,OAAA,CAAAC,GAAA,SAAAI,GAAA;MACA;IACA;IACAC,WAAA;MACA;MACA;MACA,MAAAZ,GAAA;MACAb,KAAA,CAAA0B,IAAA,CAAAb,GAAA;QACAG,EAAA;QACAW,OAAA;QACAC,QAAA;MACA,CACA,EACAX,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAhB,IAAA;QACA,KAAAmB,OAAA,CAAAC,IAAA;MACA,GAEAC,KAAA,CAAAC,GAAA;QACAL,OAAA,CAAAC,GAAA,SAAAI,GAAA;MACA;IACA;IACAK,QAAA;MACA,MAAAC,IAAA;MACA9B,KAAA,CAAA+B,GAAA,CAAAD,IAAA,EACAb,IAAA,CAAAC,QAAA;QACA,KAAAf,KAAA,GAAAe,QAAA,CAAAhB,IAAA;QAEA,KAAA8B,MAAA,GAAAC,IAAA,CAAAC,KAAA,MAAA/B,KAAA;MACA,GACAoB,KAAA,CAAAY,KAAA;QACAhB,OAAA,CAAAC,GAAA,CAAAe,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAP,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}