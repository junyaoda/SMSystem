{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    return {\n      user: [],\n      headers: [{\n        text: 'No',\n        value: 'id',\n        align: 'center'\n      }, {\n        text: 'ユーザ名',\n        value: 'userName',\n        align: 'center'\n      }, {\n        text: 'SlackID',\n        value: 'slackId',\n        align: 'center'\n      }, {\n        text: '操作',\n        value: 'delete',\n        align: 'center',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    deleteItem(item) {\n      const index = this.items.indexOf(item);\n      confirm('ガチで削除しますか') && this.items.splice(index, 1);\n    },\n    updateItem() {\n      // this.$router.push('/MemberUpdate'){ name: \"B\"\n      this.$router.push({\n        name: \"MemberUpdate\",\n        params: {\n          aaa: \"aaa\"\n        }\n      }).catch(() => {});\n    },\n    getUser() {\n      const path = 'http://localhost:8080/user';\n      axios.get(path).then(response => {\n        this.user = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.getUser();\n  }\n};","map":{"version":3,"names":["axios","components","data","user","headers","text","value","align","sortable","methods","deleteItem","item","index","items","indexOf","confirm","splice","updateItem","$router","push","name","params","aaa","catch","getUser","path","get","then","response","error","console","log","created"],"sources":["src/pages/MemberManagement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main>\n            <v-container>\n                <h2>\n                    <space></space>メンバー管理\n                </h2>\n\n                <v-row>\n                    <v-col cols=\"10\">\n                        <v-data-table :headers=\"headers\" :items=\"user\">\n\n                            <template v-slot:[`item.delete`]=\"{ item }\">\n                                <v-btn @click=\"deleteItem(item)\">\n                                    delete\n                                </v-btn>\n                                <v-btn @click=\"updateItem()\">\n                                    update\n                                </v-btn>\n                            </template>\n                        </v-data-table>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            user: [],\n            headers: [\n                {\n                    text: 'No',\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: 'ユーザ名',\n                    value: 'userName',\n                    align: 'center',\n                },\n                {\n                    text: 'SlackID',\n                    value: 'slackId',\n                    align: 'center',\n                },\n                {\n                    text: '操作',\n                    value: 'delete',\n                    align: 'center',\n                    sortable: false,\n                },\n            ],\n        }\n    },\n    methods: {\n        deleteItem(item) {\n            const index = this.items.indexOf(item)\n            confirm('ガチで削除しますか') && this.items.splice(index, 1)\n        },\n        updateItem() {\n            // this.$router.push('/MemberUpdate'){ name: \"B\"\n            this.$router.push({ name: \"MemberUpdate\", params: { aaa: \"aaa\" } }).catch(() => { });\n        },\n        getUser() {\n            const path = 'http://localhost:8080/user'\n            axios.get(path)\n                .then(response => {\n                    this.user = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    },\n    created() {\n        this.getUser()\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":";AA6BA,OAAAA,KAAA;AACA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA;MACA,MAAAC,KAAA,QAAAC,KAAA,CAAAC,OAAA,CAAAH,IAAA;MACAI,OAAA,sBAAAF,KAAA,CAAAG,MAAA,CAAAJ,KAAA;IACA;IACAK,WAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,MAAA;UAAAC,GAAA;QAAA;MAAA,GAAAC,KAAA;IACA;IACAC,QAAA;MACA,MAAAC,IAAA;MACAzB,KAAA,CAAA0B,GAAA,CAAAD,IAAA,EACAE,IAAA,CAAAC,QAAA;QACA,KAAAzB,IAAA,GAAAyB,QAAA,CAAA1B,IAAA;MACA,GACAqB,KAAA,CAAAM,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;EACAG,QAAA;IACA,KAAAR,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}