{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    return {\n      users: [],\n      headers: [{\n        text: 'No',\n        value: 'id',\n        align: 'center'\n      }, {\n        text: 'ユーザ名',\n        value: 'userName',\n        align: 'center'\n      }, {\n        text: 'SlackID',\n        value: 'slackId',\n        align: 'center'\n      }, {\n        text: '操作',\n        value: 'delete',\n        align: 'center',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    created() {\n      this.select();\n    },\n    select() {\n      this.selected = 1;\n      const path = 'http://localhost:8080/user/select';\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    insert() {\n      const url = 'http://localhost:8080/user/insert';\n      axios.put(url, {\n        d: 4,\n        slackId: 'aaa',\n        userName: 'aaa'\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    delete(id) {\n      confirm(id);\n      const url = 'http://localhost:8080/user/delete';\n      axios.delete(url, {\n        params: {\n          id: 1\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push('/SubmissionManagement');\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    update(id) {\n      confirm(id);\n      const url = 'http://localhost:8080/user/update';\n      axios.post(url, {\n        id: id\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push({\n          name: \"MemberUpdate\"\n        });\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n\n      // if (this.selected === 2){\n      //     this.selected = 1\n      // }\n\n      // this.selected = this.users.find(user => user.id == id);\n      // confirm(this.selected);\n      // confirm(id);\n      // const index = this.items.indexOf(item)\n      // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n    }\n  }\n};","map":{"version":3,"names":["axios","components","data","users","headers","text","value","align","sortable","methods","created","select","selected","path","get","then","response","catch","error","console","log","insert","url","put","d","slackId","userName","err","delete","id","confirm","params","$router","push","update","post","name"],"sources":["src/pages/MemberManagement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main>\n            <v-container>\n                <!-- <div v-if=\"selected==2\">\n\n                </div> -->\n\n                <div v-if=\"selected == 1\">\n                    <h2>メンバー管理\n                    </h2>\n                    <v-row>\n                        <v-col cols=\"10\">\n                            <v-data-table :headers=\"headers\" :items=\"users\">\n                                <template v-slot:[`item.delete`]=\"{ index }\">\n                                    <v-btn @click=\"delete (users[index].id)\">\n                                        delete\n                                    </v-btn>\n                                    <v-btn @click=\"update(users[index].id)\">\n                                        update\n                                    </v-btn>\n                                </template>\n                            </v-data-table>\n                        </v-col>\n                    </v-row>\n                </div>\n\n                <v-container>\n                    <v-row justify=\"right\" class=\"align-center\">\n                        <v-btn @click=\"insert()\">\n                            Insert\n                        </v-btn>\n                    </v-row>\n                </v-container>\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            users: [],\n            headers: [\n                {\n                    text: 'No',\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: 'ユーザ名',\n                    value: 'userName',\n                    align: 'center',\n                },\n                {\n                    text: 'SlackID',\n                    value: 'slackId',\n                    align: 'center',\n                },\n                {\n                    text: '操作',\n                    value: 'delete',\n                    align: 'center',\n                    sortable: false,\n                },\n            ],\n        }\n    },\n    methods: {\n        created() {\n            this.select()\n        },\n        select() {\n            this.selected = 1;\n            const path = 'http://localhost:8080/user/select'\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        insert() {\n            const url = 'http://localhost:8080/user/insert'\n            axios.put(url, {\n                d: 4,\n                slackId: 'aaa',\n                userName: 'aaa',\n            }\n            )\n                .then(response => {\n                    console.log(response.data);\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        delete(id) {\n            confirm(id);\n            const url = 'http://localhost:8080/user/delete'\n            axios.delete(url, {\n                params: {\n                    id: 1\n                }\n            }\n            )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.push('/SubmissionManagement')\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        update(id) {\n            confirm(id);\n            const url = 'http://localhost:8080/user/update'\n            axios.post(url, {\n                id: id\n            }\n            )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.push({ name: \"MemberUpdate\" });\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n\n            // if (this.selected === 2){\n            //     this.selected = 1\n            // }\n\n            // this.selected = this.users.find(user => user.id == id);\n            // confirm(this.selected);\n            // confirm(id);\n            // const index = this.items.indexOf(item)\n            // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAwCA,OAAAA,KAAA;AACA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAC,MAAA;IACA;IACAA,OAAA;MACA,KAAAC,QAAA;MACA,MAAAC,IAAA;MACAb,KAAA,CAAAc,GAAA,CAAAD,IAAA,EACAE,IAAA,CAAAC,QAAA;QACA,KAAAb,KAAA,GAAAa,QAAA,CAAAd,IAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAA;MACA,MAAAC,GAAA;MACAtB,KAAA,CAAAuB,GAAA,CAAAD,GAAA;QACAE,CAAA;QACAC,OAAA;QACAC,QAAA;MACA,CACA,EACAX,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAd,IAAA;MACA,GAEAe,KAAA,CAAAU,GAAA;QACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;MACA;IACA;IACAC,OAAAC,EAAA;MACAC,OAAA,CAAAD,EAAA;MACA,MAAAP,GAAA;MACAtB,KAAA,CAAA4B,MAAA,CAAAN,GAAA;QACAS,MAAA;UACAF,EAAA;QACA;MACA,CACA,EACAd,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAd,IAAA;QACA,KAAA8B,OAAA,CAAAC,IAAA;MACA,GAEAhB,KAAA,CAAAU,GAAA;QACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;MACA;IACA;IACAO,OAAAL,EAAA;MACAC,OAAA,CAAAD,EAAA;MACA,MAAAP,GAAA;MACAtB,KAAA,CAAAmC,IAAA,CAAAb,GAAA;QACAO,EAAA,EAAAA;MACA,CACA,EACAd,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAd,IAAA;QACA,KAAA8B,OAAA,CAAAC,IAAA;UAAAG,IAAA;QAAA;MACA,GAEAnB,KAAA,CAAAU,GAAA;QACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}