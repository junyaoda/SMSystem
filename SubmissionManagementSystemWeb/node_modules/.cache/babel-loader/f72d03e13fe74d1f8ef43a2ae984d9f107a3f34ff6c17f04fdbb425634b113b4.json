{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n  data() {\n    return {\n      users: [],\n      groupId: this.$route.params.groupId,\n      groupName: this.$route.params.groupName,\n      selectedUserIdList: [],\n      loop: Math.floor(Number(this.$route.params.groupMember.length) / 4) + 1\n    };\n  },\n  //入力フォームに入力時、処理実施\n  computed: {\n    //入力チェック\n    inputCheck() {\n      //グループ名が未入力もしくは空白行のみの場合\n      if (!this.groupName.match(/\\S/g)) {\n        //非活性\n        return false;\n      }\n      //ユーザ名のリストをループする\n      for (let user of this.selectedUserIdList) {\n        //ユーザ名が１つでも選択されている場合\n        if (user !== null && typeof user === 'object') {\n          //活性\n          return true;\n        }\n      }\n      //ユーザ名が１つも選択されていない場合\n      //非活性\n      return false;\n    }\n  },\n  created() {\n    this.selectAll();\n    for (let i = 0; i < this.$route.params.groupMember.length; i++) {\n      this.selectedUserIdList[i] = this.$route.params.groupMember[i];\n    }\n  },\n  methods: {\n    addForm() {\n      this.loop = this.loop + 1;\n    },\n    selectAll() {\n      const path = constant.SELECT_USER_PULLDOWN_PATH;\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    update(groupId, groupName, selectedUserIdList) {\n      var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n      var userIdList = [];\n      for (let userId of selectedUserIdList) {\n        if (userId !== null && typeof userId === 'object') {\n          userIdList.push(userId);\n        }\n      }\n      if (res == true) {\n        const path = constant.UPDATE_GROUP_PATH;\n        axios.post(path, {\n          groupId: groupId,\n          groupName: groupName,\n          user: userIdList\n        }).then(response => {\n          console.log(response.data);\n          this.$router.push({\n            name: \"PageLoading\",\n            params: {\n              message: constant.UPDATE_COMPLETE_MESSAGE,\n              pageCode: constant.GROUP_MANAGEMENT_PAGE\n            }\n          });\n        }).catch(err => {\n          console.log(\"err:\", err);\n          this.$router.push({\n            name: \"GroupManagement\",\n            params: {\n              message: constant.ERROR_MESSAGE\n            }\n          });\n        });\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"GroupManagement\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","constant","data","users","groupId","$route","params","groupName","selectedUserIdList","loop","Math","floor","Number","groupMember","length","computed","inputCheck","match","user","created","selectAll","i","methods","addForm","path","SELECT_USER_PULLDOWN_PATH","get","then","response","catch","error","console","log","update","res","confirm","UPDATE_CONFIRM_MESSAGE","userIdList","userId","push","UPDATE_GROUP_PATH","post","$router","name","message","UPDATE_COMPLETE_MESSAGE","pageCode","GROUP_MANAGEMENT_PAGE","err","ERROR_MESSAGE","back"],"sources":["src/pages/GroupUpdate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col cols=\"11\">\n                <h2>\n                    グループ更新\n                </h2>\n            </v-col>\n            <v-col>\n                <v-btn small fab dark color=\"indigo\" @click=\"back()\">\n                    <v-icon dark> mdi-undo-variant </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-text-field hide-details=\"auto\" @keyup=\"inputCheck\" v-model=\"groupName\" label=\"グループ名\"></v-text-field>\n            </v-col>\n        </v-row>\n        <div v-for=\"n in loop\" :key=\"n\">\n            <v-row>\n                <v-col cols=\"3\">\n                    <v-combobox item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                        @keyup=\"inputCheck\" v-model=\"selectedUserIdList[4 * (n - 1)]\" return-object\n                        clearable></v-combobox>\n                </v-col>\n                <v-col cols=\"3\">\n                    <v-combobox item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                        @keyup=\"inputCheck\" v-model=\"selectedUserIdList[4 * n - 3]\" return-object\n                        clearable></v-combobox>\n                </v-col>\n                <v-col cols=\"3\">\n                    <v-combobox item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                        @keyup=\"inputCheck\" v-model=\"selectedUserIdList[4 * n - 2]\" return-object\n                        clearable></v-combobox>\n                </v-col>\n                <v-col cols=\"3\">\n                    <v-combobox item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                        @keyup=\"inputCheck\" v-model=\"selectedUserIdList[4 * n - 1]\" return-object\n                        clearable></v-combobox>\n                </v-col>\n            </v-row>\n        </div>\n        <v-row>\n            <v-col cols=\"1\">\n                <v-btn small fab dark color=\"indigo\" @click=\"addForm()\">\n                    <v-icon dark> mdi-plus </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-layout>\n            <v-btn class=\"mx-auto\" :disabled=\"!inputCheck\" @click=\"update(groupId, groupName, selectedUserIdList)\">\n                Update\n            </v-btn>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n    data() {\n        return {\n            users: [],\n            groupId: this.$route.params.groupId,\n            groupName: this.$route.params.groupName,\n            selectedUserIdList: [],\n            loop: Math.floor(Number(this.$route.params.groupMember.length) / 4) + 1,\n        };\n    },\n    //入力フォームに入力時、処理実施\n    computed: {\n        //入力チェック\n        inputCheck() {\n            //グループ名が未入力もしくは空白行のみの場合\n            if (!(this.groupName.match(/\\S/g))) {\n                //非活性\n                return false\n            }\n            //ユーザ名のリストをループする\n            for (let user of this.selectedUserIdList) {\n                //ユーザ名が１つでも選択されている場合\n                if (user !== null && typeof user === 'object') {\n                    //活性\n                    return true\n                }\n            }\n            //ユーザ名が１つも選択されていない場合\n            //非活性\n            return false\n        }\n    },\n    created() {\n        this.selectAll()\n        for (let i = 0; i < this.$route.params.groupMember.length; i++) {\n            this.selectedUserIdList[i] = this.$route.params.groupMember[i]\n        }\n    },\n    methods: {\n        addForm() {\n            this.loop = this.loop + 1\n        },\n        selectAll() {\n            const path = constant.SELECT_USER_PULLDOWN_PATH;\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        update(groupId, groupName, selectedUserIdList) {\n            var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n\n            var userIdList = [];\n            for (let userId of selectedUserIdList) {\n                if (userId !== null && typeof userId === 'object') {\n                    userIdList.push(userId);\n                }\n            }\n\n            if (res == true) {\n                const path = constant.UPDATE_GROUP_PATH\n                axios.post(path, {\n                    groupId: groupId,\n                    groupName: groupName,\n                    user: userIdList,\n                }\n                )\n                    .then(response => {\n                        console.log(response.data);\n                        this.$router.push({\n                            name: \"PageLoading\",\n                            params: {\n                                message: constant.UPDATE_COMPLETE_MESSAGE,\n                                pageCode: constant.GROUP_MANAGEMENT_PAGE\n                            }\n                        });\n                    })\n                    .catch(err => {\n                        console.log(\"err:\", err);\n                        this.$router.push({\n                            name: \"GroupManagement\",\n                            params: {\n                                message: constant.ERROR_MESSAGE\n                            }\n                        });\n                    });\n            }\n        },\n        back() {\n            this.$router.push({\n                name: \"GroupManagement\"\n            })\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AA2DA,OAAAA,KAAA;AACA,OAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA;MACAG,SAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,SAAA;MACAC,kBAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,MAAA,MAAAP,MAAA,CAAAC,MAAA,CAAAO,WAAA,CAAAC,MAAA;IACA;EACA;EACA;EACAC,QAAA;IACA;IACAC,WAAA;MACA;MACA,UAAAT,SAAA,CAAAU,KAAA;QACA;QACA;MACA;MACA;MACA,SAAAC,IAAA,SAAAV,kBAAA;QACA;QACA,IAAAU,IAAA,oBAAAA,IAAA;UACA;UACA;QACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,QAAAhB,MAAA,CAAAC,MAAA,CAAAO,WAAA,CAAAC,MAAA,EAAAO,CAAA;MACA,KAAAb,kBAAA,CAAAa,CAAA,SAAAhB,MAAA,CAAAC,MAAA,CAAAO,WAAA,CAAAQ,CAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAd,IAAA,QAAAA,IAAA;IACA;IACAW,UAAA;MACA,MAAAI,IAAA,GAAAvB,QAAA,CAAAwB,yBAAA;MACAzB,KAAA,CAAA0B,GAAA,CAAAF,IAAA,EACAG,IAAA,CAAAC,QAAA;QACA,KAAAzB,KAAA,GAAAyB,QAAA,CAAA1B,IAAA;MACA,GACA2B,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAA7B,OAAA,EAAAG,SAAA,EAAAC,kBAAA;MACA,IAAA0B,GAAA,GAAAC,OAAA,CAAAlC,QAAA,CAAAmC,sBAAA;MAEA,IAAAC,UAAA;MACA,SAAAC,MAAA,IAAA9B,kBAAA;QACA,IAAA8B,MAAA,oBAAAA,MAAA;UACAD,UAAA,CAAAE,IAAA,CAAAD,MAAA;QACA;MACA;MAEA,IAAAJ,GAAA;QACA,MAAAV,IAAA,GAAAvB,QAAA,CAAAuC,iBAAA;QACAxC,KAAA,CAAAyC,IAAA,CAAAjB,IAAA;UACApB,OAAA,EAAAA,OAAA;UACAG,SAAA,EAAAA,SAAA;UACAW,IAAA,EAAAmB;QACA,CACA,EACAV,IAAA,CAAAC,QAAA;UACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAA1B,IAAA;UACA,KAAAwC,OAAA,CAAAH,IAAA;YACAI,IAAA;YACArC,MAAA;cACAsC,OAAA,EAAA3C,QAAA,CAAA4C,uBAAA;cACAC,QAAA,EAAA7C,QAAA,CAAA8C;YACA;UACA;QACA,GACAlB,KAAA,CAAAmB,GAAA;UACAjB,OAAA,CAAAC,GAAA,SAAAgB,GAAA;UACA,KAAAN,OAAA,CAAAH,IAAA;YACAI,IAAA;YACArC,MAAA;cACAsC,OAAA,EAAA3C,QAAA,CAAAgD;YACA;UACA;QACA;MACA;IACA;IACAC,KAAA;MACA,KAAAR,OAAA,CAAAH,IAAA;QACAI,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}