{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n  data() {\n    return {\n      users: [],\n      groupId: this.$route.params.groupId,\n      groupName: this.$route.params.groupName,\n      selectedUserId0: \"\",\n      selectedUserId1: \"\",\n      selectedUserId2: \"\",\n      selectedUserId3: \"\",\n      selected4: \"\",\n      selected5: \"\",\n      selected6: \"\",\n      selected7: \"\"\n    };\n  },\n  created() {\n    this.selectAll();\n    for (let i = 0; i < this.$route.params.groupMember.length; i++) {\n      eval(\"this.selectedUserId\" + i + \" = this.$route.params.groupMember[\" + i + \"].userName\");\n      confirm(this.selectedUserId0);\n    }\n  },\n  methods: {\n    selectAll() {\n      const path = constant.SELECT_USER_PULLDOWN_PATH;\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    update(groupName, selectedUserId0, selectedUserId1, selectedUserId2, selectedUserId3) {\n      var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n      var userIdList = [];\n      for (let i = 0; i < 4; i++) {\n        if (!(eval(\"selectedUserId\" + i) == 0)) {\n          userIdList.push({\n            \"id\": Number(eval(\"selectedUserId\" + i))\n          });\n        }\n      }\n      if (res == true) {\n        const path = constant.UPDATE_GROUP_PATH;\n        axios.post(path, {\n          id: this.groupId,\n          groupName: groupName,\n          user: userIdList\n        }).then(response => {\n          console.log(response.data);\n          this.$router.push({\n            name: \"PageLoading\",\n            params: {\n              message: constant.UPDATE_COMPLETE_MESSAGE,\n              pageCode: constant.GROUP_MANAGEMENT_PAGE\n            }\n          });\n        }).catch(err => {\n          console.log(\"err:\", err);\n          this.$router.push({\n            name: \"GroupManagement\",\n            params: {\n              message: constant.ERROR_MESSAGE\n            }\n          });\n        });\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"GroupManagement\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","constant","data","users","groupId","$route","params","groupName","selectedUserId0","selectedUserId1","selectedUserId2","selectedUserId3","selected4","selected5","selected6","selected7","created","selectAll","i","groupMember","length","eval","confirm","methods","path","SELECT_USER_PULLDOWN_PATH","get","then","response","catch","error","console","log","update","res","UPDATE_CONFIRM_MESSAGE","userIdList","push","Number","UPDATE_GROUP_PATH","post","id","user","$router","name","message","UPDATE_COMPLETE_MESSAGE","pageCode","GROUP_MANAGEMENT_PAGE","err","ERROR_MESSAGE","back"],"sources":["src/pages/GroupUpdate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col cols=\"11\">\n                <h2>\n                    グループ更新\n                </h2>\n            </v-col>\n            <v-col>\n                <v-btn small fab dark color=\"indigo\" @click=\"back()\">\n                    <v-icon dark> mdi-undo-variant </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-text-field hide-details=\"auto\" v-model=\"groupName\" label=\"グループ名\" clearable></v-text-field>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                    v-model=\"selectedUserId0\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                    v-model=\"selectedUserId1\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                    v-model=\"selectedUserId2\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\"\n                    v-model=\"selectedUserId3\"></v-select>\n            </v-col>\n        </v-row>\n        <!-- <v-row>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected4\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected5\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected6\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" item-value=\"id\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected7\"></v-select>\n            </v-col>\n        </v-row> -->\n        <v-layout>\n            <v-btn class=\"mx-auto\"\n                @click=\"update(groupName, selectedUserId0, selectedUserId1, selectedUserId2, selectedUserId3)\">\n                Update\n            </v-btn>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n    data() {\n        return {\n            users: [],\n            groupId: this.$route.params.groupId,\n            groupName: this.$route.params.groupName,\n            selectedUserId0: \"\",\n            selectedUserId1: \"\",\n            selectedUserId2: \"\",\n            selectedUserId3: \"\",\n            selected4: \"\",\n            selected5: \"\",\n            selected6: \"\",\n            selected7: \"\",\n            \n        };\n    }, \n    created() {\n        this.selectAll()\n        \n        for (let i = 0; i < this.$route.params.groupMember.length; i++) {\n            eval(\"this.selectedUserId\" + i + \" = this.$route.params.groupMember[\" + i + \"].userName\");\n            confirm(this.selectedUserId0)\n        }\n    },\n    methods: {\n        selectAll() {\n            const path = constant.SELECT_USER_PULLDOWN_PATH;\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        update(groupName, selectedUserId0, selectedUserId1, selectedUserId2, selectedUserId3) {\n            var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n            \n            var userIdList = [];\n            for (let i = 0; i < 4; i++) {\n                if (!(eval(\"selectedUserId\" + i) == 0)) {\n                    userIdList.push({ \"id\": Number(eval(\"selectedUserId\" + i)) });\n                }\n            }\n\n            if (res == true) {\n                const path = constant.UPDATE_GROUP_PATH\n                axios.post(path, {\n                    id: this.groupId, \n                    groupName: groupName,\n                    user: userIdList,\n                }\n                )\n                    .then(response => {\n                        console.log(response.data);\n                        this.$router.push({\n                            name: \"PageLoading\",\n                            params: {\n                                message: constant.UPDATE_COMPLETE_MESSAGE,\n                                pageCode: constant.GROUP_MANAGEMENT_PAGE\n                            }\n                        });\n                    })\n                    .catch(err => {\n                        console.log(\"err:\", err);\n                        this.$router.push({\n                            name: \"GroupManagement\",\n                            params: {\n                                message: constant.ERROR_MESSAGE\n                            }\n                        });\n                    });\n            }\n        },\n        back() {\n            this.$router.push({\n                name: \"GroupManagement\"\n            })\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AA6DA,OAAAA,KAAA;AACA,OAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA;MACAG,SAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,SAAA;MACAC,eAAA;MACAC,eAAA;MACAC,eAAA;MACAC,eAAA;MACAC,SAAA;MACAC,SAAA;MACAC,SAAA;MACAC,SAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;IAEA,SAAAC,CAAA,MAAAA,CAAA,QAAAb,MAAA,CAAAC,MAAA,CAAAa,WAAA,CAAAC,MAAA,EAAAF,CAAA;MACAG,IAAA,yBAAAH,CAAA,0CAAAA,CAAA;MACAI,OAAA,MAAAd,eAAA;IACA;EACA;EACAe,OAAA;IACAN,UAAA;MACA,MAAAO,IAAA,GAAAvB,QAAA,CAAAwB,yBAAA;MACAzB,KAAA,CAAA0B,GAAA,CAAAF,IAAA,EACAG,IAAA,CAAAC,QAAA;QACA,KAAAzB,KAAA,GAAAyB,QAAA,CAAA1B,IAAA;MACA,GACA2B,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAA1B,SAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA;MACA,IAAAuB,GAAA,GAAAZ,OAAA,CAAArB,QAAA,CAAAkC,sBAAA;MAEA,IAAAC,UAAA;MACA,SAAAlB,CAAA,MAAAA,CAAA,MAAAA,CAAA;QACA,MAAAG,IAAA,oBAAAH,CAAA;UACAkB,UAAA,CAAAC,IAAA;YAAA,MAAAC,MAAA,CAAAjB,IAAA,oBAAAH,CAAA;UAAA;QACA;MACA;MAEA,IAAAgB,GAAA;QACA,MAAAV,IAAA,GAAAvB,QAAA,CAAAsC,iBAAA;QACAvC,KAAA,CAAAwC,IAAA,CAAAhB,IAAA;UACAiB,EAAA,OAAArC,OAAA;UACAG,SAAA,EAAAA,SAAA;UACAmC,IAAA,EAAAN;QACA,CACA,EACAT,IAAA,CAAAC,QAAA;UACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAA1B,IAAA;UACA,KAAAyC,OAAA,CAAAN,IAAA;YACAO,IAAA;YACAtC,MAAA;cACAuC,OAAA,EAAA5C,QAAA,CAAA6C,uBAAA;cACAC,QAAA,EAAA9C,QAAA,CAAA+C;YACA;UACA;QACA,GACAnB,KAAA,CAAAoB,GAAA;UACAlB,OAAA,CAAAC,GAAA,SAAAiB,GAAA;UACA,KAAAN,OAAA,CAAAN,IAAA;YACAO,IAAA;YACAtC,MAAA;cACAuC,OAAA,EAAA5C,QAAA,CAAAiD;YACA;UACA;QACA;MACA;IACA;IACAC,KAAA;MACA,KAAAR,OAAA,CAAAN,IAAA;QACAO,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}