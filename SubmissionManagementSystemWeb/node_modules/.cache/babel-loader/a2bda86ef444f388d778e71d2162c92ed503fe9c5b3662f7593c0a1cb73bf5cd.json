{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    return {\n      message: this.$route.params.message,\n      users: [],\n      headers: [{\n        text: 'No',\n        value: 'id',\n        align: 'center'\n      }, {\n        text: 'ユーザ名',\n        value: 'userName',\n        align: 'center'\n      }, {\n        text: 'SlackID',\n        value: 'slackId',\n        align: 'center'\n      }, {\n        text: '操作',\n        value: 'delete',\n        align: 'center',\n        sortable: false\n      }]\n    };\n  },\n  created() {\n    this.selectAll();\n  },\n  methods: {\n    selectAll() {\n      this.selected = 1;\n      const path = 'http://localhost:8080/user/selectAll';\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    insert() {\n      const url = 'http://localhost:8080/user/insert';\n      axios.put(url, {\n        id: 4,\n        slackId: 'aaa',\n        userName: 'aaa'\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    delete(id) {\n      confirm(\"削除してもよろしいですか？\");\n      const url = 'http://localhost:8080/user/delete';\n      axios.delete(url, {\n        params: {\n          id: id\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push({\n          name: \"MemberManagement\",\n          params: {\n            message: \"DeleteComplete!!\"\n          }\n        });\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    update(id, userName, slackId) {\n      this.$router.push({\n        name: \"MemberUpdate\",\n        params: {\n          id: id,\n          userName: userName,\n          slackId: slackId\n        }\n      });\n      // confirm(id);\n      // const url = 'http://localhost:8080/user/select'\n      // axios.get(url, {\n      //     params: {\n      //         id: id\n      //     }\n      // }\n      // )\n      //     .then(response => {\n      //         this.user = response.data;\n      //         console.log(response.data);\n      //         this.$router.push({\n      //             name: \"MemberUpdate\",\n      //              params: {\n      //                   id: this.user.id ,\n      //                 //   slackId: this.user.slackId,\n      //                 //   userName: this.user.userName,\n      //              } });\n      //         // });\n      //     })\n\n      //     .catch(err => {\n      //         console.log(\"err:\", err);\n      //     });\n\n      // if (this.selected === 2){\n      //     this.selected = 1\n      // }\n\n      // this.selected = this.users.find(user => user.id == id);\n      // confirm(this.selected);\n      // confirm(id);\n      // const index = this.items.indexOf(item)\n      // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n    }\n  }\n};","map":{"version":3,"names":["axios","components","data","message","$route","params","users","headers","text","value","align","sortable","created","selectAll","methods","selected","path","get","then","response","catch","error","console","log","insert","url","put","id","slackId","userName","err","delete","confirm","$router","push","name","update"],"sources":["src/pages/MemberManagement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main>\n            <v-container>\n                <!-- <div v-if=\"selected==2\">\n\n                </div> -->\n\n                <!-- <div v-if=\"selected == 1\"> -->\n                <h1> {{ message }}</h1>\n                <h2>メンバー管理\n                </h2>\n                <v-row>\n                    <v-col cols=\"10\">\n                        <v-data-table :headers=\"headers\" :items=\"users\">\n                            <template v-slot:[`item.delete`]=\"{ index }\">\n                                <v-btn @click=\"delete(users[index].id)\">\n                                    delete\n                                </v-btn>\n                                <v-btn @click=\"update(users[index].id, users[index].userName, users[index].slackId)\">\n                                    update\n                                </v-btn>\n                            </template>\n                        </v-data-table>\n                    </v-col>\n                </v-row>\n                <!-- </div> -->\n\n                <v-container>\n                    <v-row justify=\"right\" class=\"align-center\">\n                        <v-btn @click=\"insert()\">\n                            Insert\n                        </v-btn>\n                    </v-row>\n                </v-container>\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            message: this.$route.params.message,\n            users: [],\n            headers: [\n                {\n                    text: 'No',\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: 'ユーザ名',\n                    value: 'userName',\n                    align: 'center',\n                },\n                {\n                    text: 'SlackID',\n                    value: 'slackId',\n                    align: 'center',\n                },\n                {\n                    text: '操作',\n                    value: 'delete',\n                    align: 'center',\n                    sortable: false,\n                },\n            ],\n        }\n    },\n    created() {\n        this.selectAll()\n\n    },\n    methods: {\n        selectAll() {\n            this.selected = 1;\n            const path = 'http://localhost:8080/user/selectAll';\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        insert() {\n            const url = 'http://localhost:8080/user/insert';\n            axios.put(url, {\n                id: 4,\n                slackId: 'aaa',\n                userName: 'aaa',\n            }\n            )\n                .then(response => {\n                    console.log(response.data);\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        delete(id) {\n            confirm(\"削除してもよろしいですか？\");\n            const url = 'http://localhost:8080/user/delete'\n            axios.delete(url, {\n                params: {\n                    id: id,\n                }\n            }\n            )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.push({\n                        name: \"MemberManagement\",\n                        params: {\n                            message: \"DeleteComplete!!\"\n                        }\n                    });\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        update(id, userName, slackId) {\n             this.$router.push({\n                 name: \"MemberUpdate\",\n                 params: {\n                     id: id,\n                     userName: userName,\n                     slackId: slackId,\n                 }\n             });\n            // confirm(id);\n            // const url = 'http://localhost:8080/user/select'\n            // axios.get(url, {\n            //     params: {\n            //         id: id\n            //     }\n            // }\n            // )\n            //     .then(response => {\n            //         this.user = response.data;\n            //         console.log(response.data);\n            //         this.$router.push({\n            //             name: \"MemberUpdate\",\n            //              params: {\n            //                   id: this.user.id ,\n            //                 //   slackId: this.user.slackId,\n            //                 //   userName: this.user.userName,\n            //              } });\n            //         // });\n            //     })\n\n            //     .catch(err => {\n            //         console.log(\"err:\", err);\n            //     });\n\n            // if (this.selected === 2){\n            //     this.selected = 1\n            // }\n\n            // this.selected = this.users.find(user => user.id == id);\n            // confirm(this.selected);\n            // confirm(id);\n            // const index = this.items.indexOf(item)\n            // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAyCA,OAAAA,KAAA;AACA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA;MACAG,KAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EAEA;EACAC,OAAA;IACAD,UAAA;MACA,KAAAE,QAAA;MACA,MAAAC,IAAA;MACAhB,KAAA,CAAAiB,GAAA,CAAAD,IAAA,EACAE,IAAA,CAAAC,QAAA;QACA,KAAAb,KAAA,GAAAa,QAAA,CAAAjB,IAAA;MACA,GACAkB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAA;MACA,MAAAC,GAAA;MACAzB,KAAA,CAAA0B,GAAA,CAAAD,GAAA;QACAE,EAAA;QACAC,OAAA;QACAC,QAAA;MACA,CACA,EACAX,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAjB,IAAA;MACA,GAEAkB,KAAA,CAAAU,GAAA;QACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;MACA;IACA;IACAC,OAAAJ,EAAA;MACAK,OAAA;MACA,MAAAP,GAAA;MACAzB,KAAA,CAAA+B,MAAA,CAAAN,GAAA;QACApB,MAAA;UACAsB,EAAA,EAAAA;QACA;MACA,CACA,EACAT,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAjB,IAAA;QACA,KAAA+B,OAAA,CAAAC,IAAA;UACAC,IAAA;UACA9B,MAAA;YACAF,OAAA;UACA;QACA;MACA,GAEAiB,KAAA,CAAAU,GAAA;QACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;MACA;IACA;IACAM,OAAAT,EAAA,EAAAE,QAAA,EAAAD,OAAA;MACA,KAAAK,OAAA,CAAAC,IAAA;QACAC,IAAA;QACA9B,MAAA;UACAsB,EAAA,EAAAA,EAAA;UACAE,QAAA,EAAAA,QAAA;UACAD,OAAA,EAAAA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}