{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    return {\n      users: [],\n      headers: [{\n        text: 'No',\n        value: 'id',\n        align: 'center'\n      }, {\n        text: 'ユーザ名',\n        value: 'userName',\n        align: 'center'\n      }, {\n        text: 'SlackID',\n        value: 'slackId',\n        align: 'center'\n      }, {\n        text: '操作',\n        value: 'delete',\n        align: 'center',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    deleteItem(id) {\n      confirm(id);\n      const url = 'http://localhost:8080/user/userDelete';\n      axios.delete(url, {\n        params: {\n          id: 1\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.$router.push('/SubmissionManagement');\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    updateItem(id) {\n      confirm(id);\n      // if (this.selected === 2){\n\n      //     this.selected = 1\n      // }\n\n      // this.selected = this.users.find(user => user.id == id);\n      // confirm(this.selected);\n      // confirm(id);\n      // const index = this.items.indexOf(item)\n      // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n\n      // const url = 'http://localhost:8080/user/userUpdate'\n      // axios.post(url, {\n      //     id:1,\n      //     slackId:'aaa',\n      //     userName: 'aaa',\n      // }\n      // )\n      //     .then(response => {\n      //         console.log(response.data);\n      //         this.$router.push('/SubmissionManagement')\n      //     })\n\n      //     .catch(err => {\n      //         console.log(\"err:\", err);\n      //     });\n    },\n    getUser() {\n      this.selected = 1;\n      const path = 'http://localhost:8080/user';\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    insertItem() {\n      const url = 'http://localhost:8080/user/userInsert';\n      axios.put(url, {\n        id: 4,\n        slackId: 'aaa',\n        userName: 'aaa'\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    }\n  },\n  created() {\n    this.getUser();\n  }\n};","map":{"version":3,"names":["axios","components","data","users","headers","text","value","align","sortable","methods","deleteItem","id","confirm","url","delete","params","then","response","console","log","$router","push","catch","err","updateItem","getUser","selected","path","get","error","insertItem","put","slackId","userName","created"],"sources":["src/pages/MemberManagement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main>\n            <v-container>\n                <!-- <div v-if=\"selected==2\">\n\n                </div> -->\n\n                <div v-if=\"selected == 1\">\n                    <h2>\n                        <space></space>メンバー管理{{ selected }}\n                            <v-btn @click=\"insertItem()\" justify=\"end\">\n                                Insert\n                            </v-btn>\n                    </h2>\n                    <v-row>\n                        <v-col cols=\"10\">\n                            <v-data-table :headers=\"headers\" :items=\"users\">\n                                <template v-slot:[`item.delete`]=\"{ index }\">\n                                    <v-btn @click=\"deleteItem(users[index].id)\">\n                                        delete\n                                    </v-btn>\n                                    <v-btn @click=\"updateItem(users[index].id)\">\n                                        update\n                                    </v-btn>\n                                </template>\n                            </v-data-table>\n                        </v-col>\n                    </v-row>\n                </div>\n                <!-- <v-row>\n                    <v-col cols=\"10\">\n                        <v-data-table :headers=\"headers\" :items=\"users\">\n\n                            <template v-slot:[`item.delete`]=\"{}\">\n                                <v-btn @click=\"deleteItem(users)\">\n                                    delete\n                                </v-btn>\n                                <v-btn @click=\"updateItem()\">\n                                    update\n                                </v-btn>\n                            </template>\n                        </v-data-table>\n                    </v-col>\n                </v-row> -->\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            users: [],\n            headers: [\n                {\n                    text: 'No',\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: 'ユーザ名',\n                    value: 'userName',\n                    align: 'center',\n                },\n                {\n                    text: 'SlackID',\n                    value: 'slackId',\n                    align: 'center',\n                },\n                {\n                    text: '操作',\n                    value: 'delete',\n                    align: 'center',\n                    sortable: false,\n                },\n            ],\n        }\n    },\n    methods: {\n        deleteItem(id) {\n            confirm(id);\n            const url = 'http://localhost:8080/user/userDelete'\n            axios.delete(url,{\n                params: {\n                    id:1\n                }\n            }\n                )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.push('/SubmissionManagement')\n                })\n\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        updateItem(id) {\n            confirm(id);\n            // if (this.selected === 2){\n\n            //     this.selected = 1\n            // }\n            \n            // this.selected = this.users.find(user => user.id == id);\n            // confirm(this.selected);\n            // confirm(id);\n            // const index = this.items.indexOf(item)\n            // this.$router.push({ name: \"MemberUpdate\", params: { aaa: 'user' } }).catch(() => { });\n\n            // const url = 'http://localhost:8080/user/userUpdate'\n            // axios.post(url, {\n            //     id:1,\n            //     slackId:'aaa',\n            //     userName: 'aaa',\n            // }\n            // )\n            //     .then(response => {\n            //         console.log(response.data);\n            //         this.$router.push('/SubmissionManagement')\n            //     })\n\n            //     .catch(err => {\n            //         console.log(\"err:\", err);\n            //     });\n        },\n        getUser() {\n            \n            this.selected= 1;\n            const path = 'http://localhost:8080/user'\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        insertItem(){\n             const url = 'http://localhost:8080/user/userInsert'\n             axios.put(url, {\n                 id:4,\n                 slackId:'aaa',\n                 userName: 'aaa',\n             }\n             )\n                 .then(response => {\n                     console.log(response.data);\n                 })\n\n                 .catch(err => {\n                     console.log(\"err:\", err);\n                 });\n        }\n    },\n    created() {\n        this.getUser()\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAmDA,OAAAA,KAAA;AACA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,WAAAC,EAAA;MACAC,OAAA,CAAAD,EAAA;MACA,MAAAE,GAAA;MACAb,KAAA,CAAAc,MAAA,CAAAD,GAAA;QACAE,MAAA;UACAJ,EAAA;QACA;MACA,CACA,EACAK,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAf,IAAA;QACA,KAAAkB,OAAA,CAAAC,IAAA;MACA,GAEAC,KAAA,CAAAC,GAAA;QACAL,OAAA,CAAAC,GAAA,SAAAI,GAAA;MACA;IACA;IACAC,WAAAb,EAAA;MACAC,OAAA,CAAAD,EAAA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;IACA;IACAc,QAAA;MAEA,KAAAC,QAAA;MACA,MAAAC,IAAA;MACA3B,KAAA,CAAA4B,GAAA,CAAAD,IAAA,EACAX,IAAA,CAAAC,QAAA;QACA,KAAAd,KAAA,GAAAc,QAAA,CAAAf,IAAA;MACA,GACAoB,KAAA,CAAAO,KAAA;QACAX,OAAA,CAAAC,GAAA,CAAAU,KAAA;MACA;IACA;IACAC,WAAA;MACA,MAAAjB,GAAA;MACAb,KAAA,CAAA+B,GAAA,CAAAlB,GAAA;QACAF,EAAA;QACAqB,OAAA;QACAC,QAAA;MACA,CACA,EACAjB,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAf,IAAA;MACA,GAEAoB,KAAA,CAAAC,GAAA;QACAL,OAAA,CAAAC,GAAA,SAAAI,GAAA;MACA;IACA;EACA;EACAW,QAAA;IACA,KAAAT,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}