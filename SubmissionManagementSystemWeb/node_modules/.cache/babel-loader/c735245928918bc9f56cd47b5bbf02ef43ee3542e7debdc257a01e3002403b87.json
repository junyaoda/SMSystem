{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  beforeRouteUpdate(to, from, next) {\n    this.message = to.params.message;\n    this.fetchData();\n    next();\n  },\n  data() {\n    return {\n      message: this.$route.params.message,\n      users: [],\n      headers: [{\n        text: 'No',\n        value: 'id',\n        align: 'center'\n      }, {\n        text: 'ユーザ名',\n        value: 'userName',\n        align: 'center'\n      }, {\n        text: 'SlackID',\n        value: 'slackId',\n        align: 'center'\n      }, {\n        text: '操作',\n        value: 'delete',\n        align: 'center',\n        sortable: false\n      }]\n    };\n  },\n  created() {\n    this.selectAll();\n  },\n  methods: {\n    selectAll() {\n      const path = 'http://localhost:8080/user/selectUserAll';\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    insert() {\n      this.$router.push(\"MemberInsert\");\n    },\n    del(id) {\n      confirm(\"削除してもよろしいですか？\");\n      const path = 'http://localhost:8080/user/deleteUser?id=' + id;\n      axios.delete(path).then(response => {\n        console.log(response.data);\n        this.$router.replace({\n          name: \"MemberManagement\",\n          params: {\n            message: \"DeleteComplete!!\"\n          }\n        });\n      }).catch(err => {\n        console.log(\"err:\", err);\n      });\n    },\n    update(id, userName, slackId) {\n      this.$router.push({\n        name: \"MemberUpdate\",\n        params: {\n          id: id,\n          userName: userName,\n          slackId: slackId\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","beforeRouteUpdate","to","from","next","message","params","fetchData","data","$route","users","headers","text","value","align","sortable","created","selectAll","methods","path","get","then","response","catch","error","console","log","insert","$router","push","del","id","confirm","delete","replace","name","err","update","userName","slackId"],"sources":["src/pages/MemberManagement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main>\n            <v-container>\n                <h1> {{ message }}</h1>\n                <h2>メンバー管理\n                </h2>\n                <v-row>\n                    <v-col cols=\"10\">\n                        <v-data-table :headers=\"headers\" :items=\"users\">\n                            <template v-slot:[`item.delete`]=\"{ index }\">\n                                <v-btn @click=\"del(users[index].id)\">\n                                    delete\n                                </v-btn>\n                                <v-btn @click=\"update(users[index].id, users[index].userName, users[index].slackId)\">\n                                    update\n                                </v-btn>\n                            </template>\n                        </v-data-table>\n                    </v-col>\n                </v-row>\n                <v-container>\n                    <v-row justify=\"right\" class=\"align-center\">\n                        <v-btn @click=\"insert()\">\n                            Insert\n                        </v-btn>\n                    </v-row>\n                </v-container>\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    beforeRouteUpdate(to, from, next) {\n        this.message = to.params.message;\n        this.fetchData()\n        next()\n    },\n    data() {\n        return {\n            message: this.$route.params.message,\n            users: [],\n            headers: [\n                {\n                    text: 'No',\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: 'ユーザ名',\n                    value: 'userName',\n                    align: 'center',\n                },\n                {\n                    text: 'SlackID',\n                    value: 'slackId',\n                    align: 'center',\n                },\n                {\n                    text: '操作',\n                    value: 'delete',\n                    align: 'center',\n                    sortable: false,\n                },\n            ],\n        }\n    },\n    created() {\n        this.selectAll()\n    },\n    methods: {\n        selectAll() {\n            const path = 'http://localhost:8080/user/selectUserAll';\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        insert() {\n            this.$router.push(\n                \"MemberInsert\"\n            );\n        },\n        del(id) {\n            confirm(\"削除してもよろしいですか？\");\n            const path = 'http://localhost:8080/user/deleteUser?id=' + id\n            axios.delete(path\n            )\n                .then(response => {\n                    console.log(response.data);\n                    this.$router.replace({\n                        name: \"MemberManagement\",\n                        params: {\n                            message: \"DeleteComplete!!\"\n                        }\n                    });\n                })\n                .catch(err => {\n                    console.log(\"err:\", err);\n                });\n        },\n        update(id, userName, slackId) {\n            this.$router.push({\n                name: \"MemberUpdate\",\n                params: {\n                    id: id,\n                    userName: userName,\n                    slackId: slackId,\n                }\n            });\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAkCA,OAAAA,KAAA;AACA;EACAC,kBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IACA,KAAAC,OAAA,GAAAH,EAAA,CAAAI,MAAA,CAAAD,OAAA;IACA,KAAAE,SAAA;IACAH,IAAA;EACA;EACAI,KAAA;IACA;MACAH,OAAA,OAAAI,MAAA,CAAAH,MAAA,CAAAD,OAAA;MACAK,KAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,MAAAE,IAAA;MACAnB,KAAA,CAAAoB,GAAA,CAAAD,IAAA,EACAE,IAAA,CAAAC,QAAA;QACA,KAAAZ,KAAA,GAAAY,QAAA,CAAAd,IAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,CACA,cACA;IACA;IACAC,IAAAC,EAAA;MACAC,OAAA;MACA,MAAAb,IAAA,iDAAAY,EAAA;MACA/B,KAAA,CAAAiC,MAAA,CAAAd,IACA,EACAE,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAd,IAAA;QACA,KAAAoB,OAAA,CAAAM,OAAA;UACAC,IAAA;UACA7B,MAAA;YACAD,OAAA;UACA;QACA;MACA,GACAkB,KAAA,CAAAa,GAAA;QACAX,OAAA,CAAAC,GAAA,SAAAU,GAAA;MACA;IACA;IACAC,OAAAN,EAAA,EAAAO,QAAA,EAAAC,OAAA;MACA,KAAAX,OAAA,CAAAC,IAAA;QACAM,IAAA;QACA7B,MAAA;UACAyB,EAAA,EAAAA,EAAA;UACAO,QAAA,EAAAA,QAAA;UACAC,OAAA,EAAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}