{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n  data() {\n    return {\n      id: this.$route.params.id,\n      userName: this.$route.params.userName,\n      slackId: this.$route.params.slackId\n    };\n  },\n  //入力フォームに入力時、処理実施\n  computed: {\n    //入力チェック\n    inputCheck() {\n      //ユーザ名もしくはSlackIDが未入力もしくは空白行のみの場合\n      if (!this.userName.match(/\\S/g) || !this.slackId.match(/\\S/g)) {\n        //非活性\n        return false;\n      }\n      //上記以外の場合\n      else {\n        //活性\n        return true;\n      }\n    }\n  },\n  methods: {\n    update(id, userName, slackId) {\n      var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n      if (res == true) {\n        const path = constant.UPDATE_USER_PATH;\n        axios.post(path, {\n          id: id,\n          userName: userName,\n          slackId: slackId\n        }).then(response => {\n          this.$router.push({\n            name: \"PageLoading\",\n            params: {\n              message: constant.UPDATE_COMPLETE_MESSAGE,\n              pageCode: constant.MEMBER_MANAGEMENT_PAGE\n            }\n          });\n          console.log(response.data);\n        }).catch(err => {\n          this.$router.push({\n            name: \"MemberManagement\",\n            params: {\n              message: constant.ERROR_MESSAGE\n            }\n          });\n          console.log(\"err:\", err);\n        });\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"MemberManagement\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","constant","data","id","$route","params","userName","slackId","computed","inputCheck","match","methods","update","res","confirm","UPDATE_CONFIRM_MESSAGE","path","UPDATE_USER_PATH","post","then","response","$router","push","name","message","UPDATE_COMPLETE_MESSAGE","pageCode","MEMBER_MANAGEMENT_PAGE","console","log","catch","err","ERROR_MESSAGE","back"],"sources":["src/pages/MemberUpdate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col cols=\"11\">\n                <h2>\n                    メンバー更新\n                </h2>\n            </v-col>\n            <v-col>\n                <v-btn small fab dark color=\"indigo\" @click=\"back()\">\n                    <v-icon dark> mdi-undo-variant </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-text-field hide-details=\"auto\" @keyup=\"inputCheck\" v-model=\"userName\"\n                    label=\"UserName\"></v-text-field>\n            </v-col>\n            <v-col>\n                <v-text-field label=\"SlackId\" @keyup=\"inputCheck\" v-model=\"slackId\" variant=\"outlined\"></v-text-field>\n            </v-col>\n        </v-row>\n        <v-layout>\n            <v-btn class=\"mx-auto\" :disabled=\"!inputCheck\" @click=\"update(id, userName, slackId)\">\n                Update\n            </v-btn>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n    data() {\n        return {\n            id: this.$route.params.id,\n            userName: this.$route.params.userName,\n            slackId: this.$route.params.slackId,\n        };\n    },\n    //入力フォームに入力時、処理実施\n    computed: {\n        //入力チェック\n        inputCheck() {\n            //ユーザ名もしくはSlackIDが未入力もしくは空白行のみの場合\n            if (!(this.userName.match(/\\S/g)) || !(this.slackId.match(/\\S/g))) {\n                //非活性\n                return false\n            }\n            //上記以外の場合\n            else {\n                //活性\n                return true\n            }\n        }\n    },\n    methods: {\n        update(id, userName, slackId) {\n            var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n            \n            if (res == true) {\n                const path = constant.UPDATE_USER_PATH\n                axios.post(path, {\n                    id: id,\n                    userName: userName,\n                    slackId: slackId,\n                }\n                )\n                    .then(response => {\n                        this.$router.push({\n                            name: \"PageLoading\",\n                            params: {\n                                message: constant.UPDATE_COMPLETE_MESSAGE,\n                                pageCode: constant.MEMBER_MANAGEMENT_PAGE\n                            }\n                        });\n                        console.log(response.data);\n                    })\n                    .catch(err => {\n                        this.$router.push({\n                            name: \"MemberManagement\",\n                            params: {\n                                message: constant.ERROR_MESSAGE\n                            }\n                        });\n                        console.log(\"err:\", err);\n                    });\n            }\n        },\n        back() {\n            this.$router.push({\n                name: \"MemberManagement\"\n            })\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAgCA,OAAAA,KAAA;AACA,OAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;MACAG,QAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,QAAA;MACAC,OAAA,OAAAH,MAAA,CAAAC,MAAA,CAAAE;IACA;EACA;EACA;EACAC,QAAA;IACA;IACAC,WAAA;MACA;MACA,UAAAH,QAAA,CAAAI,KAAA,iBAAAH,OAAA,CAAAG,KAAA;QACA;QACA;MACA;MACA;MAAA,KACA;QACA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,OAAAT,EAAA,EAAAG,QAAA,EAAAC,OAAA;MACA,IAAAM,GAAA,GAAAC,OAAA,CAAAb,QAAA,CAAAc,sBAAA;MAEA,IAAAF,GAAA;QACA,MAAAG,IAAA,GAAAf,QAAA,CAAAgB,gBAAA;QACAjB,KAAA,CAAAkB,IAAA,CAAAF,IAAA;UACAb,EAAA,EAAAA,EAAA;UACAG,QAAA,EAAAA,QAAA;UACAC,OAAA,EAAAA;QACA,CACA,EACAY,IAAA,CAAAC,QAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAlB,MAAA;cACAmB,OAAA,EAAAvB,QAAA,CAAAwB,uBAAA;cACAC,QAAA,EAAAzB,QAAA,CAAA0B;YACA;UACA;UACAC,OAAA,CAAAC,GAAA,CAAAT,QAAA,CAAAlB,IAAA;QACA,GACA4B,KAAA,CAAAC,GAAA;UACA,KAAAV,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAlB,MAAA;cACAmB,OAAA,EAAAvB,QAAA,CAAA+B;YACA;UACA;UACAJ,OAAA,CAAAC,GAAA,SAAAE,GAAA;QACA;MACA;IACA;IACAE,KAAA;MACA,KAAAZ,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}