{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n  data() {\n    return {\n      groupId: this.$route.params.groupId,\n      groupName: this.$route.params.groupName,\n      groupMember: [this.$route.params.groupMember],\n      headers: [{\n        text: '名前',\n        value: 'user'\n      }]\n    };\n  },\n  methods: {\n    update(id, userName, slackId) {\n      var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n      if (res == true) {\n        const path = constant.UPDATE_USER_PATH;\n        axios.post(path, {\n          id: id,\n          userName: userName,\n          slackId: slackId\n        }).then(response => {\n          console.log(response.data);\n          this.$router.push({\n            name: \"PageLoading\",\n            params: {\n              message: constant.UPDATE_COMPLETE_MESSAGE\n            }\n          });\n        }).catch(err => {\n          console.log(\"err:\", err);\n          this.$router.push({\n            name: \"MemberManagement\",\n            params: {\n              message: constant.ERROR_MESSAGE\n            }\n          });\n        });\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"GroupManagement\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","constant","data","groupId","$route","params","groupName","groupMember","headers","text","value","methods","update","id","userName","slackId","res","confirm","UPDATE_CONFIRM_MESSAGE","path","UPDATE_USER_PATH","post","then","response","console","log","$router","push","name","message","UPDATE_COMPLETE_MESSAGE","catch","err","ERROR_MESSAGE","back"],"sources":["src/pages/GroupUpdate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col cols=\"11\">\n                <h2>\n                    グループ更新\n                </h2>\n            </v-col>\n            <v-col>\n                <v-btn small fab dark color=\"indigo\" @click=\"back()\">\n                    <v-icon dark> mdi-undo-variant </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-text-field hide-details=\"auto\" v-model=\"groupName\" label=\"グループ名\" clearable></v-text-field>\n            </v-col>\n        </v-row>\n        <v-row>\n            <template v-slot:[`item.groupMember`]=\"{ item }\">\n                <div v-for=\"i in item.groupMember\" :key=\"i.id\">{{ i.userName }}</div>\n            </template>\n        </v-row>\n            {{ groupMember }}\n            <v-layout>\n                <v-btn class=\"mx-auto\" @click=\"update(id, userName, slackId)\">\n                    Update\n                </v-btn>\n            </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n    data() {\n        return {\n            groupId: this.$route.params.groupId,\n            groupName: this.$route.params.groupName,\n            groupMember: [this.$route.params.groupMember],\n            headers: [\n                {\n                    text: '名前',\n                    value: 'user',\n                },\n            ]\n        };\n    },\n    methods: {\n        update(id, userName, slackId) {\n            var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n            if (res == true) {\n                const path = constant.UPDATE_USER_PATH\n                axios.post(path, {\n                    id: id,\n                    userName: userName,\n                    slackId: slackId,\n                }\n                )\n                    .then(response => {\n                        console.log(response.data);\n                        this.$router.push({\n                            name: \"PageLoading\",\n                            params: {\n                                message: constant.UPDATE_COMPLETE_MESSAGE,\n                            }\n                        });\n                    })\n                    .catch(err => {\n                        console.log(\"err:\", err);\n                        this.$router.push({\n                            name: \"MemberManagement\",\n                            params: {\n                                message: constant.ERROR_MESSAGE\n                            }\n                        });\n                    });\n            }\n        },\n        back() {\n            this.$router.push({\n                name: \"GroupManagement\"\n            })\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AAkCA,OAAAA,KAAA;AACA,OAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA;MACAG,SAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,SAAA;MACAC,WAAA,QAAAH,MAAA,CAAAC,MAAA,CAAAE,WAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,OAAAC,EAAA,EAAAC,QAAA,EAAAC,OAAA;MACA,IAAAC,GAAA,GAAAC,OAAA,CAAAhB,QAAA,CAAAiB,sBAAA;MACA,IAAAF,GAAA;QACA,MAAAG,IAAA,GAAAlB,QAAA,CAAAmB,gBAAA;QACApB,KAAA,CAAAqB,IAAA,CAAAF,IAAA;UACAN,EAAA,EAAAA,EAAA;UACAC,QAAA,EAAAA,QAAA;UACAC,OAAA,EAAAA;QACA,CACA,EACAO,IAAA,CAAAC,QAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAArB,IAAA;UACA,KAAAwB,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAvB,MAAA;cACAwB,OAAA,EAAA5B,QAAA,CAAA6B;YACA;UACA;QACA,GACAC,KAAA,CAAAC,GAAA;UACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;UACA,KAAAN,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAvB,MAAA;cACAwB,OAAA,EAAA5B,QAAA,CAAAgC;YACA;UACA;QACA;MACA;IACA;IACAC,KAAA;MACA,KAAAR,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}