{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n  data() {\n    return {\n      groupId: this.$route.params.groupId,\n      groupName: this.$route.params.groupName,\n      selected1: this.arr[0]\n      // selected2: this.arr[1],\n      // selected3: this.arr[2],\n      // selected4: [],\n      // selected5: [],\n      // selected6: [],\n      // selected7: [],\n      // selected8: [],\n      // groupMember: this.arr,\n    };\n  },\n  created() {\n    const arr = [];\n    for (let i = 0; i < this.$route.params.groupMember.length; i++) {\n      arr[i] = this.$route.params.groupMember[i].userName;\n    }\n  },\n  methods: {\n    update(id, userName, slackId) {\n      var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n      if (res == true) {\n        const path = constant.UPDATE_USER_PATH;\n        axios.post(path, {\n          id: id,\n          userName: userName,\n          slackId: slackId\n        }).then(response => {\n          console.log(response.data);\n          this.$router.push({\n            name: \"PageLoading\",\n            params: {\n              message: constant.UPDATE_COMPLETE_MESSAGE\n            }\n          });\n        }).catch(err => {\n          console.log(\"err:\", err);\n          this.$router.push({\n            name: \"MemberManagement\",\n            params: {\n              message: constant.ERROR_MESSAGE\n            }\n          });\n        });\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"GroupManagement\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","constant","data","groupId","$route","params","groupName","selected1","arr","created","i","groupMember","length","userName","methods","update","id","slackId","res","confirm","UPDATE_CONFIRM_MESSAGE","path","UPDATE_USER_PATH","post","then","response","console","log","$router","push","name","message","UPDATE_COMPLETE_MESSAGE","catch","err","ERROR_MESSAGE","back"],"sources":["src/pages/GroupUpdate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col cols=\"11\">\n                <h2>\n                    グループ更新\n                </h2>\n            </v-col>\n            <v-col>\n                <v-btn small fab dark color=\"indigo\" @click=\"back()\">\n                    <v-icon dark> mdi-undo-variant </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-text-field hide-details=\"auto\" v-model=\"groupName\" label=\"グループ名\" clearable></v-text-field>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected1\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected2\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected3\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected4\"></v-select>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected5\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected6\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected7\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected8\"></v-select>\n            </v-col>\n        </v-row>\n        <!--                \n                 <div v-for=\"i in item.groupMember\" :key=\"i.id\">{{ arr[i] }}</div>\n             -->\n        <v-layout>\n            <v-btn class=\"mx-auto\" @click=\"update(id, userName, slackId)\">\n                Update\n            </v-btn>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n    data() {\n        return {\n            groupId: this.$route.params.groupId,\n            groupName: this.$route.params.groupName,\n            selected1: this.arr[0],\n            // selected2: this.arr[1],\n            // selected3: this.arr[2],\n            // selected4: [],\n            // selected5: [],\n            // selected6: [],\n            // selected7: [],\n            // selected8: [],\n            // groupMember: this.arr,\n        };\n    }, \n    created() {\n        const arr = []\n        for (let i = 0; i < this.$route.params.groupMember.length; i++){\n            arr[i] = this.$route.params.groupMember[i].userName\n        }\n    },\n    methods: {\n        update(id, userName, slackId) {\n            var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n            if (res == true) {\n                const path = constant.UPDATE_USER_PATH\n                axios.post(path, {\n                    id: id,\n                    userName: userName,\n                    slackId: slackId,\n                }\n                )\n                    .then(response => {\n                        console.log(response.data);\n                        this.$router.push({\n                            name: \"PageLoading\",\n                            params: {\n                                message: constant.UPDATE_COMPLETE_MESSAGE,\n                            }\n                        });\n                    })\n                    .catch(err => {\n                        console.log(\"err:\", err);\n                        this.$router.push({\n                            name: \"MemberManagement\",\n                            params: {\n                                message: constant.ERROR_MESSAGE\n                            }\n                        });\n                    });\n            }\n        },\n        back() {\n            this.$router.push({\n                name: \"GroupManagement\"\n            })\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AA2DA,OAAAA,KAAA;AACA,OAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA;MACAG,SAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,SAAA;MACAC,SAAA,OAAAC,GAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAC,QAAA;IACA,MAAAD,GAAA;IACA,SAAAE,CAAA,MAAAA,CAAA,QAAAN,MAAA,CAAAC,MAAA,CAAAM,WAAA,CAAAC,MAAA,EAAAF,CAAA;MACAF,GAAA,CAAAE,CAAA,SAAAN,MAAA,CAAAC,MAAA,CAAAM,WAAA,CAAAD,CAAA,EAAAG,QAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAAC,EAAA,EAAAH,QAAA,EAAAI,OAAA;MACA,IAAAC,GAAA,GAAAC,OAAA,CAAAlB,QAAA,CAAAmB,sBAAA;MACA,IAAAF,GAAA;QACA,MAAAG,IAAA,GAAApB,QAAA,CAAAqB,gBAAA;QACAtB,KAAA,CAAAuB,IAAA,CAAAF,IAAA;UACAL,EAAA,EAAAA,EAAA;UACAH,QAAA,EAAAA,QAAA;UACAI,OAAA,EAAAA;QACA,CACA,EACAO,IAAA,CAAAC,QAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAvB,IAAA;UACA,KAAA0B,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAzB,MAAA;cACA0B,OAAA,EAAA9B,QAAA,CAAA+B;YACA;UACA;QACA,GACAC,KAAA,CAAAC,GAAA;UACAR,OAAA,CAAAC,GAAA,SAAAO,GAAA;UACA,KAAAN,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAzB,MAAA;cACA0B,OAAA,EAAA9B,QAAA,CAAAkC;YACA;UACA;QACA;MACA;IACA;IACAC,KAAA;MACA,KAAAR,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}