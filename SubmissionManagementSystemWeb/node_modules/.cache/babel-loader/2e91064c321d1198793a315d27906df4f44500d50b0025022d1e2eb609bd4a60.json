{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n  data() {\n    return {\n      users: [],\n      groupId: this.$route.params.groupId,\n      groupName: this.$route.params.groupName,\n      selected1: \"\",\n      selected2: this.$route.params.groupMember[1].userName,\n      selected3: this.$route.params.groupMember[2].userName\n      // selected4: this.$route.params.groupMember[3].userName,\n      // selected5: this.$route.params.groupMember[4].userName,\n      // selected6: this.$route.params.groupMember[5].userName,\n      // selected7: this.$route.params.groupMember[6].userName,\n      // selected8: this.$route.params.groupMember[7].userName,\n    };\n  },\n  created() {\n    for (var i = 0; i < 6; i++) {}\n    this.selectAll();\n    this.selected1 = \"小田　洵也\";\n    // const arr = []\n    // for (let i = 0; i < this.$route.params.groupMember.length; i++){\n    //     arr[i] = this.$route.params.groupMember[i].userName\n    // }\n  },\n  methods: {\n    selectAll() {\n      const path = constant.SELECT_USER_ALL_PATH;\n      axios.get(path).then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    update(id, userName, slackId) {\n      var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n      if (res == true) {\n        const path = constant.UPDATE_USER_PATH;\n        axios.post(path, {\n          id: id,\n          userName: userName,\n          slackId: slackId\n        }).then(response => {\n          console.log(response.data);\n          this.$router.push({\n            name: \"PageLoading\",\n            params: {\n              message: constant.UPDATE_COMPLETE_MESSAGE\n            }\n          });\n        }).catch(err => {\n          console.log(\"err:\", err);\n          this.$router.push({\n            name: \"MemberManagement\",\n            params: {\n              message: constant.ERROR_MESSAGE\n            }\n          });\n        });\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"GroupManagement\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","constant","data","users","groupId","$route","params","groupName","selected1","selected2","groupMember","userName","selected3","created","i","selectAll","methods","path","SELECT_USER_ALL_PATH","get","then","response","catch","error","console","log","update","id","slackId","res","confirm","UPDATE_CONFIRM_MESSAGE","UPDATE_USER_PATH","post","$router","push","name","message","UPDATE_COMPLETE_MESSAGE","err","ERROR_MESSAGE","back"],"sources":["src/pages/GroupUpdate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col cols=\"11\">\n                <h2>\n                    グループ更新\n                </h2>\n            </v-col>\n            <v-col>\n                <v-btn small fab dark color=\"indigo\" @click=\"back()\">\n                    <v-icon dark> mdi-undo-variant </v-icon>\n                </v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-text-field hide-details=\"auto\" v-model=\"groupName\" label=\"グループ名\" clearable></v-text-field>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected1\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected2\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected3\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected4\"></v-select>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected5\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected6\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected7\"></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n                <v-select item-text=\"userName\" :items=\"users\" label=\"ユーザ名\" class=\"ma-2\" v-model=\"selected8\"></v-select>\n            </v-col>\n        </v-row>\n        <!--                \n                 <div v-for=\"i in item.groupMember\" :key=\"i.id\">{{ arr[i] }}</div>\n             -->\n        <v-layout>\n            <v-btn class=\"mx-auto\" @click=\"update(id, userName, slackId)\">\n                Update\n            </v-btn>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport constant from '@/consts/const';\nexport default {\n    data() {\n        return {\n            users: [],\n            groupId: this.$route.params.groupId,\n            groupName: this.$route.params.groupName,\n            selected1: \"\",\n            selected2: this.$route.params.groupMember[1].userName,\n            selected3: this.$route.params.groupMember[2].userName,\n            // selected4: this.$route.params.groupMember[3].userName,\n            // selected5: this.$route.params.groupMember[4].userName,\n            // selected6: this.$route.params.groupMember[5].userName,\n            // selected7: this.$route.params.groupMember[6].userName,\n            // selected8: this.$route.params.groupMember[7].userName,\n            \n        };\n    }, \n    created() {\n        for(var i = 0; i<6; i++){\n                \n            }\n        this.selectAll()\n        this.selected1 = \"小田　洵也\"\n        // const arr = []\n        // for (let i = 0; i < this.$route.params.groupMember.length; i++){\n        //     arr[i] = this.$route.params.groupMember[i].userName\n        // }\n    },\n    methods: {\n        selectAll() {\n            const path = constant.SELECT_USER_ALL_PATH;\n            axios.get(path)\n                .then(response => {\n                    this.users = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        update(id, userName, slackId) {\n            var res = confirm(constant.UPDATE_CONFIRM_MESSAGE);\n            if (res == true) {\n                const path = constant.UPDATE_USER_PATH\n                axios.post(path, {\n                    id: id,\n                    userName: userName,\n                    slackId: slackId,\n                }\n                )\n                    .then(response => {\n                        console.log(response.data);\n                        this.$router.push({\n                            name: \"PageLoading\",\n                            params: {\n                                message: constant.UPDATE_COMPLETE_MESSAGE,\n                            }\n                        });\n                    })\n                    .catch(err => {\n                        console.log(\"err:\", err);\n                        this.$router.push({\n                            name: \"MemberManagement\",\n                            params: {\n                                message: constant.ERROR_MESSAGE\n                            }\n                        });\n                    });\n            }\n        },\n        back() {\n            this.$router.push({\n                name: \"GroupManagement\"\n            })\n        },\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";AA2DA,OAAAA,KAAA;AACA,OAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA;MACAG,SAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,SAAA;MACAC,SAAA;MACAC,SAAA,OAAAJ,MAAA,CAAAC,MAAA,CAAAI,WAAA,IAAAC,QAAA;MACAC,SAAA,OAAAP,MAAA,CAAAC,MAAA,CAAAI,WAAA,IAAAC;MACA;MACA;MACA;MACA;MACA;IAEA;EACA;EACAE,QAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,MAAAA,CAAA,KAEA;IACA,KAAAC,SAAA;IACA,KAAAP,SAAA;IACA;IACA;IACA;IACA;EACA;EACAQ,OAAA;IACAD,UAAA;MACA,MAAAE,IAAA,GAAAhB,QAAA,CAAAiB,oBAAA;MACAlB,KAAA,CAAAmB,GAAA,CAAAF,IAAA,EACAG,IAAA,CAAAC,QAAA;QACA,KAAAlB,KAAA,GAAAkB,QAAA,CAAAnB,IAAA;MACA,GACAoB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,OAAAC,EAAA,EAAAhB,QAAA,EAAAiB,OAAA;MACA,IAAAC,GAAA,GAAAC,OAAA,CAAA7B,QAAA,CAAA8B,sBAAA;MACA,IAAAF,GAAA;QACA,MAAAZ,IAAA,GAAAhB,QAAA,CAAA+B,gBAAA;QACAhC,KAAA,CAAAiC,IAAA,CAAAhB,IAAA;UACAU,EAAA,EAAAA,EAAA;UACAhB,QAAA,EAAAA,QAAA;UACAiB,OAAA,EAAAA;QACA,CACA,EACAR,IAAA,CAAAC,QAAA;UACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAnB,IAAA;UACA,KAAAgC,OAAA,CAAAC,IAAA;YACAC,IAAA;YACA9B,MAAA;cACA+B,OAAA,EAAApC,QAAA,CAAAqC;YACA;UACA;QACA,GACAhB,KAAA,CAAAiB,GAAA;UACAf,OAAA,CAAAC,GAAA,SAAAc,GAAA;UACA,KAAAL,OAAA,CAAAC,IAAA;YACAC,IAAA;YACA9B,MAAA;cACA+B,OAAA,EAAApC,QAAA,CAAAuC;YACA;UACA;QACA;MACA;IACA;IACAC,KAAA;MACA,KAAAP,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}